version: '3.8'
 
services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Testdatabse
    ports:
      - "5433:5432"  # Map port 5432 in the container to port 5433 on the host
 
  backend:
    build:
      context: /Users/saradenno/Downloads/sara_denno-attachments/demo
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/Testdatabse
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - db
    ports:
      - "8080:8080"
 
  frontend:
    build:
      context: /Users/saradenno/Downloads/sara_denno-attachments/saraFront
      dockerfile: Dockerfile
    ports:
      - "4200:4200"




# version: '3'
# services:
#   postgres:
#     image: postgres:16
#     restart: always
#     expose:
#       - 5432
#     environment:
#       POSTGRES_DB: Testdatabase
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       PGDATA: /var/lib/postgresql/data
#     volumes:
#       - /Users/saradenno/docker/volumes/postgres:/var/lib/postgresql/data
      
#     ports:
#       - 5433:5432
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U bobwebshop -d luxuryproductsbob"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   frontend:
#     build: ./saraFront/
#     ports:
#       - 4200:4200

#   backend:
#     build: ./demo/
#     depends_on:
#       postgres:
#         condition: service_healthy
#     ports:
#       - 8080:8080







# services:
#   postgres:
#     image: postgres:16
#     restart: always
#     expose:
#       - 5432
#     environment:
#       POSTGRES_DB: luxuryproductsbob
#       POSTGRES_USER: bobwebshop
#       POSTGRES_PASSWORD: ilovepuppies
#       PGDATA: /var/lib/postgresql/data
#     volumes:
#       - ./postgres-data:/var/lib/postgresql/data
#     ports:
#       - 5432:5432
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U bobwebshop -d luxuryproductsbob"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
 
#   frontend:
#     build: ./saraFront/
#     ports:
#       - 4200:4200
 
#   backend:
#     build: ./demo/
#     depends_on:
#       postgres:
#         condition: service_healthy
#     ports:
#       - 8080:8080

#services:
#  postgres:
#    image: postgres:16
#    restart: always
#    expose:
#      - 5432
#    environment:
#      POSTGRES_DB: luxuryproductsbob
#      POSTGRES_USER: bobwebshop
#      POSTGRES_PASSWORD: ilovepuppies
#      PGDATA: /var/lib/postgresql/data
#    volumes:
#      - /Users/saradenno/docker/postgres-data:/var/lib/postgresql/data
#    ports:
#      - 5432:5432
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U bobwebshop -d luxuryproductsbob"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  frontend:
#    build: ./saraFront/
#    ports:
#      - 4200:4200
#
#  backend:
#    build: ./demo/
#    depends_on:
#      postgres:
#        condition: service_healthy
#    ports:
#      - 8080:8080
#











#version: '3.8'
#
#services:
#  db:
#    image: postgres:latest
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: Testdatabase
#    ports:
#      - "5435:5432"  # Map port 5432 in the container to port 5435 on the host
#
#  backend:
#    build:
#      context: C:/Users/saradenno/Downloads/sara (6) 3/demo
#      dockerfile: Dockerfile
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/Testdatabase
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#      SPRING_JPA_SHOW_SQL: "true"
#      SERVER_PORT: 8080
#      SERVER_SERVLET_CONTEXT_PATH: /api
#      JWT_SECRET: Ireallylovepuppiestheyarethebest**
#      JWT_EXPIRATION: 3600000
#    depends_on:
#      - db
#    ports:
#      - "8080:8080"
